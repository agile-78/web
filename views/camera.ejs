<!DOCTYPE html>
<html>
  <head>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/mobilenet"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/knn-classifier"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.15/dist/tailwind.min.css"
      rel="stylesheet"
    />
  </head>
  <body>
    <div
      id="loading"
      class="h-screen w-screen flex flex-col justify-center items-center"
    >
      <p
        class="max-w-lg text-3xl font-semibold leading-normal text-gray-900 dark:text-white"
      >
        Loading
      </p>
      <img src="/bt21-koya.gif" class="mx-auto" />
    </div>
    <div
      class="container h-screen w-screen bg-purple-200 p-4 hidden"
      id="imageclassification"
    >
      <h1 class="text-2xl font-bold text-blue-600">Image Scanning Page</h1>
      <div class="flex justify-between items-center mb-4">
        <label
          for="image-input"
          class="file-upload-label bg-pink-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-lg mt-4"
          >Take picture/Upload from Files</label
        >
        <input
          type="file"
          id="image-input"
          accept="image/jpeg, image/jpg, image/png, image/heic"
          class="hidden"
        />
      </div>
      <div class="mb-4">
        <button
          id="classify-button"
          class="flex-grow bg-pink-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-lg mt-4 hidden"
        >
          Classify
        </button>
      </div>
      <div class="border rounded-lg border-gray-300 p-4">
        <img
          id="uploaded-image"
          src=""
          alt="Upload Image"
          class="max-w-full max-h-60"
        />
      </div>
      <div id="console" class="mt-4"></div>
      <button
        id="submit-button"
        class="flex-grow bg-pink-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-lg mt-4 hidden"
      >
        Submit
      </button>
    </div>

    <script>
      // Get references to the necessary elements
      const classifier = knnClassifier.create();
      const imageInput = document.getElementById("image-input");

      const classifyButton = document.getElementById("classify-button");
      const submitButton = document.getElementById("submit-button");
      const uploadedImageElement = document.getElementById("uploaded-image");
      let net;

      mobilenet.load().then((loadedNet) => {
        net = loadedNet;

        var loadingElement = document.getElementById("loading");
        loadingElement.style.display = "none";

        var imageclassificationElement = document.getElementById(
          "imageclassification"
        );
        imageclassificationElement.style.display = "block";

        // Automatically load images from the /data folder
        loadingImagesFromFolder("/data/plastic_bottles", 0);
        loadingImagesFromFolder("/data/aluminium_cans", 1);
        loadingImagesFromFolder("/data/paper", 2);
        console.log("Loaded model");
      });
      async function loadingImagesFromFolder(folderName, classId) {
        // Simulate loading images from a folder
        const images = [
          folderName + "/1.jpg",
          folderName + "/2.jpg",
          folderName + "/3.jpg",
          folderName + "/4.jpg",
          folderName + "/5.jpg",
          folderName + "/6.jpg",
          folderName + "/7.jpg",
        ];
        for (const imageUrl of images) {
          const img = new Image();
          img.src = imageUrl;
          img.onload = async function () {
            const activation = net.infer(img, true);
            classifier.addExample(activation, classId);
          };
        }
      }

      async function app() {
        console.log("Loading MobileNet...");
        net = await mobilenet.load();
        //when user upload a file to classify
        imageInput.addEventListener("change", (event) => {
          submitButton.style.display = "none"; // Hide the submit button when the image is changed
          document.getElementById("console").innerText = ""; //Remove the results when image is changed
          const file = event.target.files[0];
          const reader = new FileReader();
          reader.onload = function (e) {
            uploadedImageElement.src = e.target.result;
            console.log("Selected file path:", file.name); // Print the selected file path (name) to the console
          };
          reader.readAsDataURL(file);
        });
      }
      classifyButton.addEventListener("click", classifyImage);

      uploadedImageElement.addEventListener("load", function () {
        // Show the submit button when the image is loaded
        classifyButton.style.display = "block";
      });
      async function classifyImage() {
        const activation = net.infer(uploadedImageElement, "conv_preds");
        const result = await classifier.predictClass(activation);
        const classes = ["Plastic Bottle", "Aluminium Can", "Paper"];
        document.getElementById("console").innerText = ` 
            Prediction: ${classes[result.label]}\n 
            Probability: ${result.confidences[result.label]} 
          `;
        if (result.confidences[result.label] > 0.5) {
          submitButton.style.display = "block";
        }
      }
      submitButton.addEventListener("click", function () {
        window.location.href = "/points";
      });
      app();
    </script>
  </body>
</html>
